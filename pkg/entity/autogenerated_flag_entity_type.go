// Code generated by go-queryset. DO NOT EDIT.
package entity

import (
	"errors"
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// notest
// ===== BEGIN of all query sets

// ===== BEGIN of query set FlagEntityTypeQuerySet

// FlagEntityTypeQuerySet is an queryset type for FlagEntityType
type FlagEntityTypeQuerySet struct {
	db *gorm.DB
}

// NewFlagEntityTypeQuerySet constructs new FlagEntityTypeQuerySet
func NewFlagEntityTypeQuerySet(db *gorm.DB) FlagEntityTypeQuerySet {
	return FlagEntityTypeQuerySet{
		db: db.Model(&FlagEntityType{}),
	}
}

func (qs FlagEntityTypeQuerySet) w(db *gorm.DB) FlagEntityTypeQuerySet {
	return NewFlagEntityTypeQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) All(ret *[]FlagEntityType) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *FlagEntityType) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) CreatedAtEq(createdAt time.Time) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) CreatedAtGt(createdAt time.Time) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) CreatedAtGte(createdAt time.Time) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) CreatedAtLt(createdAt time.Time) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) CreatedAtLte(createdAt time.Time) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) CreatedAtNe(createdAt time.Time) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (o *FlagEntityType) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) Delete() error {
	return qs.db.Delete(FlagEntityType{}).Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) DeletedAtEq(deletedAt time.Time) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) DeletedAtGt(deletedAt time.Time) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) DeletedAtGte(deletedAt time.Time) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) DeletedAtIsNotNull() FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) DeletedAtIsNull() FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) DeletedAtLt(deletedAt time.Time) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) DeletedAtLte(deletedAt time.Time) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) DeletedAtNe(deletedAt time.Time) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) GetUpdater() FlagEntityTypeUpdater {
	return NewFlagEntityTypeUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) IDEq(ID uint) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) IDGt(ID uint) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) IDGte(ID uint) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) IDIn(ID ...uint) FlagEntityTypeQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) IDLt(ID uint) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) IDLte(ID uint) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) IDNe(ID uint) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) IDNotIn(ID ...uint) FlagEntityTypeQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// KeyEq is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) KeyEq(key string) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("key = ?", key))
}

// KeyIn is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) KeyIn(key ...string) FlagEntityTypeQuerySet {
	if len(key) == 0 {
		qs.db.AddError(errors.New("must at least pass one key in KeyIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("key IN (?)", key))
}

// KeyNe is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) KeyNe(key string) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("key != ?", key))
}

// KeyNotIn is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) KeyNotIn(key ...string) FlagEntityTypeQuerySet {
	if len(key) == 0 {
		qs.db.AddError(errors.New("must at least pass one key in KeyNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("key NOT IN (?)", key))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) Limit(limit int) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) Offset(offset int) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs FlagEntityTypeQuerySet) One(ret *FlagEntityType) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) OrderAscByCreatedAt() FlagEntityTypeQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) OrderAscByDeletedAt() FlagEntityTypeQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) OrderAscByID() FlagEntityTypeQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) OrderAscByUpdatedAt() FlagEntityTypeQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) OrderDescByCreatedAt() FlagEntityTypeQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) OrderDescByDeletedAt() FlagEntityTypeQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) OrderDescByID() FlagEntityTypeQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) OrderDescByUpdatedAt() FlagEntityTypeQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u FlagEntityTypeUpdater) SetCreatedAt(createdAt time.Time) FlagEntityTypeUpdater {
	u.fields[string(FlagEntityTypeDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u FlagEntityTypeUpdater) SetDeletedAt(deletedAt *time.Time) FlagEntityTypeUpdater {
	u.fields[string(FlagEntityTypeDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u FlagEntityTypeUpdater) SetID(ID uint) FlagEntityTypeUpdater {
	u.fields[string(FlagEntityTypeDBSchema.ID)] = ID
	return u
}

// SetKey is an autogenerated method
// nolint: dupl
func (u FlagEntityTypeUpdater) SetKey(key string) FlagEntityTypeUpdater {
	u.fields[string(FlagEntityTypeDBSchema.Key)] = key
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u FlagEntityTypeUpdater) SetUpdatedAt(updatedAt time.Time) FlagEntityTypeUpdater {
	u.fields[string(FlagEntityTypeDBSchema.UpdatedAt)] = updatedAt
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u FlagEntityTypeUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u FlagEntityTypeUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) UpdatedAtEq(updatedAt time.Time) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) UpdatedAtGt(updatedAt time.Time) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) UpdatedAtGte(updatedAt time.Time) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) UpdatedAtLt(updatedAt time.Time) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) UpdatedAtLte(updatedAt time.Time) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs FlagEntityTypeQuerySet) UpdatedAtNe(updatedAt time.Time) FlagEntityTypeQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set FlagEntityTypeQuerySet

// ===== BEGIN of FlagEntityType modifiers

// FlagEntityTypeDBSchemaField describes database schema field. It requires for method 'Update'
type FlagEntityTypeDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f FlagEntityTypeDBSchemaField) String() string {
	return string(f)
}

// FlagEntityTypeDBSchema stores db field names of FlagEntityType
var FlagEntityTypeDBSchema = struct {
	ID        FlagEntityTypeDBSchemaField
	CreatedAt FlagEntityTypeDBSchemaField
	UpdatedAt FlagEntityTypeDBSchemaField
	DeletedAt FlagEntityTypeDBSchemaField
	Key       FlagEntityTypeDBSchemaField
}{

	ID:        FlagEntityTypeDBSchemaField("id"),
	CreatedAt: FlagEntityTypeDBSchemaField("created_at"),
	UpdatedAt: FlagEntityTypeDBSchemaField("updated_at"),
	DeletedAt: FlagEntityTypeDBSchemaField("deleted_at"),
	Key:       FlagEntityTypeDBSchemaField("key"),
}

// Update updates FlagEntityType fields by primary key
// nolint: dupl
func (o *FlagEntityType) Update(db *gorm.DB, fields ...FlagEntityTypeDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":         o.ID,
		"created_at": o.CreatedAt,
		"updated_at": o.UpdatedAt,
		"deleted_at": o.DeletedAt,
		"key":        o.Key,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update FlagEntityType %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// FlagEntityTypeUpdater is an FlagEntityType updates manager
type FlagEntityTypeUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewFlagEntityTypeUpdater creates new FlagEntityType updater
// nolint: dupl
func NewFlagEntityTypeUpdater(db *gorm.DB) FlagEntityTypeUpdater {
	return FlagEntityTypeUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&FlagEntityType{}),
	}
}

// ===== END of FlagEntityType modifiers

// ===== END of all query sets
